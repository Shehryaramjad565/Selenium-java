//package shehryarwork.BaseTest;
//
//import java.io.FileInputStream;
//import java.io.IOException;
//import java.time.Duration;
//import java.util.Properties;
//
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.openqa.selenium.support.ui.WebDriverWait;
//import org.testng.annotations.AfterMethod;
//import org.testng.annotations.BeforeMethod;
//
//import shehryarwork.PageObjects.landingPage;
//
//public class BaseTest {
//	protected static WebDriver driver;
////	public static  ;
////	@test
//	public static WebDriver initializerDriver() throws IOException {
//	Properties prop= new Properties();
//	FileInputStream fis= new FileInputStream(System.getProperty("user.dir")+"//src//test//java//shehryarwork//resourses//GlobalData.properties");
//	prop.load(fis);
//	String browserName =  prop.getProperty("browser");
//	if (browserName.equalsIgnoreCase("chrome")) {
//		 System.setProperty("webdriver.chrome.driver", "C:/Users/Public/chromedriver-win64/chromedriver.exe");
//		
//		    
//		
//		     // Explicit Wait
//		     WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(15));
//	}
//	else if (browserName.equalsIgnoreCase("edge")) {
//		//Edge
//	}
//	 WebDriver driver = new ChromeDriver();
//     driver.manage().window().maximize();
//     return driver;
//	}
//	
//	@BeforeMethod
//	public static landingPage lounchApplication() {
//		landingPage landingpage= new landingPage(driver);
//        landingpage.goToSite();
//        return landingpage;
//	}
//	
////	@AfterMethod
////	 public void close() {
////	    	driver.quit();
////	    }
////     
//}











//
//package shehryarwork.BaseTest;
//
//import java.io.FileInputStream;
//import java.io.IOException;
//import java.time.Duration;
//import java.util.Properties;
//
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.openqa.selenium.support.ui.WebDriverWait;
//import org.testng.annotations.AfterMethod;
//import org.testng.annotations.BeforeMethod;
//
//import shehryarwork.PageObjects.landingPage;
//
//public class BaseTest {
//    protected static WebDriver driver;
//    protected landingPage landingpage; // Instance variable for landingPage
//
//    public static WebDriver initializerDriver() throws IOException {
//        Properties prop = new Properties();
//        FileInputStream fis = new FileInputStream(System.getProperty("user.dir") + "//src//test//java//shehryarwork//resourses//GlobalData.properties");
//        prop.load(fis);
//        String browserName = prop.getProperty("browser");
//
//        if (browserName.equalsIgnoreCase("chrome")) {
//            System.setProperty("webdriver.chrome.driver", "C:/Users/Public/chromedriver-win64/chromedriver.exe");
//            driver = new ChromeDriver();  // Assign to class variable
//        } else if (browserName.equalsIgnoreCase("edge")) {
//            // Initialize Edge driver if needed
//        }
//
//        driver.manage().window().maximize();
//        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(15));
//
//        return driver;
//    }
//
//    @BeforeMethod
//    public landingPage launchApplication() throws IOException {
//        driver = initializerDriver(); // Ensure driver is initialized
//        landingpage = new landingPage(driver);
//        landingpage.goToSite();
//        
//    }
//
//    @AfterMethod
//    public void closeBrowser() {
//            driver.quit();
//        
//    }
//
////    public landingPage getLandingPage() {
////        return landingpage;
////    }
//}



















//
//package shehryarwork.BaseTest;
//
//import java.io.FileInputStream;
//import java.io.IOException;
//import java.time.Duration;
//import java.util.Properties;
//
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.testng.annotations.AfterMethod;
//import org.testng.annotations.BeforeMethod;
//
//import shehryarwork.PageObjects.landingPage;
//
//public class BaseTest {
//    protected static WebDriver driver;
//    protected landingPage landingpage; // Instance variable for landingPage
//
//    public static WebDriver initializerDriver() throws IOException {
//        Properties prop = new Properties();
//        FileInputStream fis = new FileInputStream(System.getProperty("user.dir") 
//            + "//src//test//java//shehryarwork//resourses//GlobalData.properties");
//        prop.load(fis);
//        String browserName = prop.getProperty("browser");
//
//        if (browserName.equalsIgnoreCase("chrome")) {
//            System.setProperty("webdriver.chrome.driver", 
//                "C:/Users/Public/chromedriver-win64/chromedriver.exe");
//            driver = new ChromeDriver();  // Assign to class variable
//        } else if (browserName.equalsIgnoreCase("edge")) {
//            // Initialize Edge driver if needed
//        }
//
//        driver.manage().window().maximize();
//        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(15));
//
//        return driver;
//    }
//
//    @BeforeMethod
//    public landingPage launchApplication() throws IOException {
//        driver = initializerDriver(); // Ensure driver is initialized
//        landingpage = new landingPage(driver);
//        landingpage.goToSite();
//        return landingpage; // Return the landingPage instance
//    }
//
//    @AfterMethod
//    public void closeBrowser() {
//        driver.quit();
////    	 if (driver != null) {
////             driver.quit();
////
////         }
//    }
//
////    public landingPage getLandingPage() {
////        return landingpage;
////    }
//}










//
//package shehryarwork.BaseTest;
//
//import java.io.File;
//import java.io.FileInputStream;
//import java.io.IOException;
//import java.time.Duration;
//import java.util.Properties;
//
//import org.apache.commons.io.FileUtils;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.testng.annotations.AfterClass;
//import org.testng.annotations.AfterMethod;
//import org.testng.annotations.BeforeClass;
//import org.testng.annotations.BeforeMethod;
//
//import shehryarwork.PageObjects.landingPage;
//
//import java.io.File;
//import java.io.IOException;
//import java.util.HashMap;
//import java.util.List;
//import org.apache.commons.io.FileUtils;
//import com.fasterxml.jackson.core.type.TypeReference;
//import com.fasterxml.jackson.databind.ObjectMapper;
//
//public class BaseTest {
//    protected static WebDriver driver;
//    protected landingPage landingpage; // Instance variable for landingPage
//
//    public static WebDriver initializerDriver() throws IOException {
//        Properties prop = new Properties();
//        FileInputStream fis = new FileInputStream(System.getProperty("user.dir")
//            + "//src//test//java//shehryarwork//resourses//GlobalData.properties");
//        prop.load(fis);
//        String browserName = prop.getProperty("browser");
//
//        if (browserName.equalsIgnoreCase("chrome")) {
//            System.setProperty("webdriver.chrome.driver", 
//                "C:/Users/Public/chromedriver-win64/chromedriver.exe");
//            driver = new ChromeDriver();  // Initialize ChromeDriver once
//        } else if (browserName.equalsIgnoreCase("edge")) {
//            // Initialize Edge driver if needed
//        }
//
//        driver.manage().window().maximize();
//        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(15));
//
//        return driver;
//    }
//
//    
//    
//    @BeforeMethod(alwaysRun=true)
//    public landingPage launchApplication() throws IOException {
//        driver = initializerDriver(); // Always initialize a new driver
//        landingpage = new landingPage(driver);
//        landingpage.goToSite();
//        return landingpage;
//    }
//
//    @AfterMethod(alwaysRun=true)
//    public void closeBrowser() {
//        if (driver != null) {
//            driver.quit();
//        }
//    }
//    
//
//    String jsonContent = FileUtils.readFileToString(
//            new File(System.getProperty("user.dir") 
//            + "//src//test//java//shehryarwork//data//PurchaseOrder.json"), "UTF-8");
//
//    // Create ObjectMapper instance
//    ObjectMapper mapper = new ObjectMapper();
//
//    // Convert JSON content to a List of HashMaps
//    List<HashMap<String, String>> data = mapper.readValue(
//            jsonContent, new TypeReference<List<HashMap<String, String>>>() {});
//
//}










//package shehryarwork.BaseTest;
//
//import java.io.File;
//import java.io.FileInputStream;
//import java.io.IOException;
//import java.time.Duration;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Properties;
//
//import org.apache.commons.io.FileUtils;
//import org.openqa.selenium.OutputType;
//import org.openqa.selenium.TakesScreenshot;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.testng.annotations.AfterMethod;
//import org.testng.annotations.BeforeMethod;
//
//import shehryarwork.PageObjects.landingPage;
//
//import com.fasterxml.jackson.core.type.TypeReference;
//import com.fasterxml.jackson.databind.ObjectMapper;
//
//public class BaseTest {
//    protected WebDriver driver;
//    protected landingPage landingpage; // Instance variable for landingPage
//
//    public WebDriver initializerDriver() throws IOException {
//        Properties prop = new Properties();
//        FileInputStream fis = new FileInputStream(System.getProperty("user.dir")
//            + "//src//test//java//shehryarwork//resourses//GlobalData.properties");
//        prop.load(fis);
//        String browserName = prop.getProperty("browser");
//
//        if (browserName.equalsIgnoreCase("chrome")) {
//            System.setProperty("webdriver.chrome.driver", 
//                "C:/Users/Public/chromedriver-win64/chromedriver.exe");
//            driver = new ChromeDriver();
//        } else if (browserName.equalsIgnoreCase("edge")) {
//            // Initialize Edge driver if needed
//        }
//
////        driver.manage().window().maximize();
//        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(15));
//        return driver;
//    }
//    
//    @BeforeMethod(alwaysRun = true)
//    public landingPage launchApplication() throws IOException {
//        driver = initializerDriver();
//        landingpage = new landingPage(driver);
//        landingpage.goToSite();
//        return landingpage;
//    }
//
//    @AfterMethod(alwaysRun = true)
//    public void closeBrowser() {
//        if (driver != null) {
//            driver.quit();
//        }
//    }
//    
////    public List<HashMap<String, String>> getJsonDataMap(filePass) throws IOException {
////        String jsonContent = FileUtils.readFileToString(new File(filePass), "UTF-8");
////
////        ObjectMapper mapper = new ObjectMapper();
////        List<HashMap<String, String>> data = mapper.readValue(
////            jsonContent, new TypeReference<List<HashMap<String, String>>>() {});
////        return data;
////    }
//    
//    public List<HashMap<String, String>> getJsonDataMap(String filePass) throws IOException {
//        String jsonContent = FileUtils.readFileToString(new File(filePass), "UTF-8");
//
//        ObjectMapper mapper = new ObjectMapper();
//        List<HashMap<String, String>> data = mapper.readValue(
//            jsonContent, new TypeReference<List<HashMap<String, String>>>() {});
//        return data;
//    }
//    
//    
//    
//    public String getScreenshot(String testCaseName,WebDriver driver) throws IOException
//	{
//		TakesScreenshot ts = (TakesScreenshot)driver;
//		File source = ts.getScreenshotAs(OutputType.FILE);
//		File file = new File(System.getProperty("user.dir") + "//reports//" + testCaseName + ".png");
//		FileUtils.copyFile(source, file);
//		return System.getProperty("user.dir") + "//reports//" + testCaseName + ".png";
//		
//		
//	}
//    
//
//}





















































//
//package shehryarwork.BaseTest;
//
//import java.io.File;
//import java.io.FileInputStream;
//import java.io.IOException;
//import java.time.Duration;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Properties;
//
//import org.apache.commons.io.FileUtils;
//import org.openqa.selenium.OutputType;
//import org.openqa.selenium.TakesScreenshot;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.testng.annotations.AfterMethod;
//import org.testng.annotations.BeforeMethod;
//
//import com.fasterxml.jackson.core.type.TypeReference;
//import com.fasterxml.jackson.databind.ObjectMapper;
//
//import io.github.bonigarcia.wdm.WebDriverManager;
//import shehryarwork.PageObjects.landingPage;
//
//public class BaseTest {
//    protected WebDriver driver;
//    protected landingPage landingPage;
//
//    public WebDriver initializeDriver() throws IOException {
//        Properties prop = new Properties();
//        FileInputStream fis = new FileInputStream(
//            System.getProperty("user.dir") + "//src//test//java//shehryarwork//resourses//GlobalData.properties");
//        prop.load(fis);
//        String browserName = prop.getProperty("browser");
//
//        if (browserName.equalsIgnoreCase("chrome")) {
////            System.setProperty("webdriver.chrome.driver", 
////                "C:/Users/Public/chromedriver-win64/chromedriver.exe");
//        	WebDriverManager.chromedriver().setup();
//            driver = new ChromeDriver();
//        }
//        
//        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(15));
//        return driver;
//    }
//
//    @BeforeMethod(alwaysRun = true)
//    public landingPage launchApplication() throws IOException {
//        driver = initializeDriver();
//        landingPage = new landingPage(driver);
//        landingPage.goToSite();
//        return landingPage;
//    }
//
//    @AfterMethod(alwaysRun = true)
//    public void closeBrowser() {
//        if (driver != null) {
//            driver.quit();
//            driver = null; // Prevent stale driver issues
//        }
//    }
//
//    public String getScreenshot(String testCaseName, WebDriver driver) throws IOException {
//        File screenshotsDir = new File(System.getProperty("user.dir") + "/reports/screenshots/");
//        if (!screenshotsDir.exists()) screenshotsDir.mkdirs();
//
//        TakesScreenshot ts = (TakesScreenshot) driver;
//        File source = ts.getScreenshotAs(OutputType.FILE);
//        String destPath = screenshotsDir.getAbsolutePath() + "/" + testCaseName + ".png";
//        FileUtils.copyFile(source, new File(destPath));
//
//        return "screenshots/" + testCaseName + ".png"; // Relative path
//    }
//
//    public List<HashMap<String, String>> getJsonDataMap(String filePath) throws IOException {
//        String jsonContent = FileUtils.readFileToString(new File(filePath), "UTF-8");
//        ObjectMapper mapper = new ObjectMapper();
//        return mapper.readValue(jsonContent, new TypeReference<List<HashMap<String, String>>>() {});
//    }
//}
















//package shehryarwork.BaseTest;
//
//import java.io.File;
//import java.io.FileInputStream;
//import java.io.IOException;
//import java.time.Duration;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Properties;
//
//import org.apache.commons.io.FileUtils;
//import org.openqa.selenium.OutputType;
//import org.openqa.selenium.TakesScreenshot;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.openqa.selenium.chrome.ChromeOptions;
//import org.testng.annotations.AfterMethod;
//import org.testng.annotations.BeforeMethod;
//
//import com.fasterxml.jackson.core.type.TypeReference;
//import com.fasterxml.jackson.databind.ObjectMapper;
//
//import io.github.bonigarcia.wdm.WebDriverManager;
//import shehryarwork.PageObjects.landingPage;
//
//public class BaseTest {
//    protected WebDriver driver;
//    protected landingPage landingPage;
//
// // In BaseTest.java
//    public WebDriver initializeDriver() throws IOException {
//        Properties prop = new Properties();
//        // Fix path separator and spelling of 'resources'
//        FileInputStream fis = new FileInputStream(
//            System.getProperty("user.dir") + "/src/test/java/shehryarwork/resources/GlobalData.properties");
//        prop.load(fis);
//        String browserName = prop.getProperty("browser");
//
//        if (browserName.equalsIgnoreCase("chrome")) {
//            WebDriverManager.chromedriver().clearDriverCache().setup();
//            ChromeOptions options = new ChromeOptions();
//            options.addArguments("--remote-allow-origins=*"); // Critical security override
//            driver = new ChromeDriver(options);
//        }
//        
//        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(15));
//        driver.manage().window().maximize();
//        return driver;
//    }
//
//    @BeforeMethod(alwaysRun = true)
//    public landingPage launchApplication() throws IOException {
//        driver = initializeDriver();
//        landingPage = new landingPage(driver);
//        landingPage.goToSite();
//        return landingPage;
//    }
//
//    @AfterMethod(alwaysRun = true)
//    public void tearDown() {
//        try {
//            if (driver != null) {
//                driver.quit();
//            }
//        } catch (Exception e) {
//            System.out.println("Browser already closed");
//        } finally {
//            driver = null;
//        }
//    }
//
//    public String getScreenshot(String testCaseName, WebDriver driver) throws IOException {
//        File screenshotsDir = new File(System.getProperty("user.dir") + "/reports/screenshots/");
//        if (!screenshotsDir.exists()) screenshotsDir.mkdirs();
//
//        TakesScreenshot ts = (TakesScreenshot) driver;
//        File source = ts.getScreenshotAs(OutputType.FILE);
//        String destPath = screenshotsDir.getAbsolutePath() + "/" + testCaseName + ".png";
//        FileUtils.copyFile(source, new File(destPath));
//
//        return "screenshots/" + testCaseName + ".png";
//    }
//
//    public List<HashMap<String, String>> getJsonDataMap(String filePath) throws IOException {
//        String jsonContent = FileUtils.readFileToString(new File(filePath), "UTF-8");
//        ObjectMapper mapper = new ObjectMapper();
//        return mapper.readValue(jsonContent, new TypeReference<List<HashMap<String, String>>>() {});
//    }
//}




























package shehryarwork.BaseTest;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.time.Duration;
import java.util.HashMap;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import shehryarwork.PageObjects.landingPage;

public class BaseTest {
    protected WebDriver driver;
    protected landingPage landingPage;

    public WebDriver initializeDriver() throws IOException {
        try {
            Properties prop = new Properties();
            FileInputStream fis = new FileInputStream(
                System.getProperty("user.dir") + "//src//test//java//shehryarwork//resourses//GlobalData.properties");
            prop.load(fis);
            String browserName = prop.getProperty("browser");

            if (browserName.equalsIgnoreCase("chrome")) {
                // Set the path to your ChromeDriver executable
                System.setProperty("webdriver.chrome.driver", 
                    "C:/Users/dell/Downloads/chromedriver-win64/chromedriver.exe"); // Update this path as needed
                driver = new ChromeDriver();
            }
            
            driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(15));
            return driver;
        } catch (Exception e) {
            System.out.println("Error initializing driver: " + e.getMessage());
            e.printStackTrace();
            throw new IOException("Failed to initialize WebDriver", e);
        }
    }

    @BeforeMethod(alwaysRun = true)
    public landingPage launchApplication() throws IOException {
        driver = initializeDriver();
        landingPage = new landingPage(driver);
        landingPage.goToSite();
        return landingPage;
    }

    @AfterMethod(alwaysRun = true)
    public void closeBrowser() {
        if (driver != null) {
            driver.quit();
            driver = null; // Prevent stale driver issues
        }
    }

    public String getScreenshot(String testCaseName, WebDriver driver) throws IOException {
        File screenshotsDir = new File(System.getProperty("user.dir") + "/reports/screenshots/");
        if (!screenshotsDir.exists()) screenshotsDir.mkdirs();

        TakesScreenshot ts = (TakesScreenshot) driver;
        File source = ts.getScreenshotAs(OutputType.FILE);
        String destPath = screenshotsDir.getAbsolutePath() + "/" + testCaseName + ".png";
        FileUtils.copyFile(source, new File(destPath));

        return "screenshots/" + testCaseName + ".png"; // Relative path
    }

    public List<HashMap<String, String>> getJsonDataMap(String filePath) throws IOException {
        String jsonContent = FileUtils.readFileToString(new File(filePath), "UTF-8");
        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(jsonContent, new TypeReference<List<HashMap<String, String>>>() {});
    }
}